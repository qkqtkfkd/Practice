.box{
    /* inline 과 block의 성격을 모두 가진 속성
    inline요소에 width, height 값을 정용할때 활용 */
    display: inline-block;
    width: 100px;
    height: 120px;
    border: 1px solid black;
    border-radius: 8px;
    background-color: blue;
}

#first{
    background-color: aqua;
    /* deg=degree, 각도 */
    transform: rotate(0deg);
    transform-origin: left bottom;
    /* 여러가지 속성에 대해 개별적으로 transition을 적용할 수 있다. */
    /* transition: transform 1s ease, margin-left 1s ease; */
}

#first:hover{ transform: rotate(360deg)
    ;

}
/* transform은 다른 요소에 영향을 주지 않고, 혼자서 변형된다. */

#second{
    background-color: blueviolet;
}

#second:hover{ transform: scale(2);}

#third{
    background-color: plum;
    /* skew(x값, Y값) */
    /* transform: skew(30deg 30deg); */
    /* skewX는 X방향으로 기울일때*/
    transform: skewX(45deg);
    /* skewY는 y방향으로 기울일때 */
    /* transform: skewY(45deg); */
}

#third:hover{
        transform: skewX(-80deg);
}

#t1{
    /* translateX(X축으로 이동) */
    transform: translateX(0);
    transition: transform 1s ease;
}


#t1:hover{
    transform:translateX(100%);
}

#t2{
    /* translateY(Y축으로 이동) */
    /* transform: translateY(-100px); */
    transform: translateX(0);
    transition: transform 1s ease-in;
}

#t2:hover{
    transform:translateX(100%);
}

#t3{
    /* translate(X값, Y값) */
    /* transform: translate(100px,150px ); */

    /* 퍼포먼스 개선을 위해 transform3D를 활용하는 경우도 있다. */
    /* 주의점: 애니메이션/트랜스폼을 과하게 많이 쓰면 브라우저가 해야할 일이 많아서, 화면이 버벅거리는 원인이 될수 있다. */
    transform: translateX(0);
    transition: transform 2s 1s cubic-bezier(0.93,-0.17, 0.25, 1);
}

#t3:hover{
    transform:translateX(100%);
}
